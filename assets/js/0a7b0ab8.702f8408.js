"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3738],{4405:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=s(4848),i=s(8453),a=s(5643);const o={id:"utility-first-fundamentals",title:"Utility-First Fundamentals",description:"How the syntax system works, what flaws the other approach has that NativeFlow fixes",slug:"/fundamentals",sidebar_position:1},r=void 0,l={id:"core-concepts/utility-first-fundamentals",title:"Utility-First Fundamentals",description:"How the syntax system works, what flaws the other approach has that NativeFlow fixes",source:"@site/docs/core-concepts/utility-first-fundamentals.mdx",sourceDirName:"core-concepts",slug:"/fundamentals",permalink:"/docs/fundamentals",draft:!1,unlisted:!1,editUrl:"https://github.com/nativeflowteam/documentation/blob/main/docs/core-concepts/utility-first-fundamentals.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"utility-first-fundamentals",title:"Utility-First Fundamentals",description:"How the syntax system works, what flaws the other approach has that NativeFlow fixes",slug:"/fundamentals",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Core Concepts",permalink:"/docs/core-concepts"},next:{title:"Flex vs Grow vs Shrink vs Basis",permalink:"/docs/flex-vs-grow-vs-shrink-vs-basis"}},c={},d=[{value:"Why NativeFlow ?",id:"why-nativeflow-",level:2},{value:"We use utility-objects, not classes, but why?",id:"we-use-utility-objects-not-classes-but-why",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"How the syntax system works, what flaws the other approach has that NativeFlow fixes"}),"\n",(0,n.jsx)(t.h2,{id:"why-nativeflow-",children:"Why NativeFlow ?"}),"\n",(0,n.jsxs)(t.p,{children:["The regular way to write styles in a React Native project is primarily through stylesheet objects,\r\nusing properties a lot similar to the ",(0,n.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS",children:"CSS for Web"}),"\r\nbut using the CSS-in-JS type of syntax."]}),"\n",(0,n.jsx)(t.p,{children:"The CSS-in-JS type of properties are verbose and take a bit of workaround to get running up due to newer namespaces, etc."}),"\n",(0,n.jsx)(a.A,{id:"@mathdebate09/react-native-vanilla",platform:"web",preview:"true",theme:"dark"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("div",{className:"thought-box",children:(0,n.jsx)(t.p,{children:"So while preserving the Native approach, we get up running with shorter syntax, with NativeFlow"})}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(a.A,{id:"@mathdebate09/react-native-flow",platform:"web",preview:"true",theme:"dark"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"You can focus on the design, we'll make it quicker for you"})}),"\n",(0,n.jsx)(t.h2,{id:"we-use-utility-objects-not-classes-but-why",children:"We use utility-objects, not classes, but why?"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["React Native was naturally meant to work around with stylesheet ",(0,n.jsx)(t.strong,{children:"objects"})," not classNames"]}),"\n",(0,n.jsx)(t.li,{children:"We forcefully started injecting tailwind with the help of babel which worked fine, but breaks sometimes, more than often"}),"\n",(0,n.jsxs)(t.li,{children:["The babel-injected approach also lacked animations and platform specific properties like ",(0,n.jsx)(t.code,{children:"elevation"})," or ",(0,n.jsx)(t.code,{children:"borderCurve"})]}),"\n",(0,n.jsx)(t.li,{children:"And why should we hassle if we can stay close to the environment"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},5643:(e,t,s)=>{s.d(t,{A:()=>a});var n=s(6540),i=s(4848);const a=e=>{let{id:t,platform:s="web",preview:a="true",theme:o="light"}=e;return(0,n.useEffect)((()=>{const e=document.createElement("script");e.src="https://snack.expo.dev/embed.js",e.async=!0,document.body.appendChild(e)}),[]),(0,i.jsx)("div",{"data-snack-id":t,"data-snack-platform":s,"data-snack-preview":a,"data-snack-theme":o,style:{overflow:"hidden",background:"#0C0D0E",border:"2px solid #323234",borderRadius:"4px",height:"505px",width:"100%"}})}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>r});var n=s(6540);const i={},a=n.createContext(i);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);